"""Created table just for stock_symbol, updated stock_observation to reference this

Revision ID: cad6549541ad
Revises: 34522ffd50ef
Create Date: 2024-10-14 13:42:28.521357

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "cad6549541ad"
down_revision: Union[str, None] = "34522ffd50ef"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "stock_symbol",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("symbol", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_stock_symbol_symbol"), "stock_symbol", ["symbol"], unique=True
    )
    op.add_column(
        "stock_observation",
        sa.Column("symbol_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.create_unique_constraint(None, "stock_observation", ["symbol_id", "timestamp"])
    op.create_foreign_key(
        None, "stock_observation", "stock_symbol", ["symbol_id"], ["id"]
    )
    op.drop_column("stock_observation", "symbol")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "stock_observation",
        sa.Column("symbol", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "stock_observation", type_="foreignkey")
    op.drop_constraint(None, "stock_observation", type_="unique")
    op.drop_column("stock_observation", "symbol_id")
    op.drop_index(op.f("ix_stock_symbol_symbol"), table_name="stock_symbol")
    op.drop_table("stock_symbol")
    # ### end Alembic commands ###
